Intro to Go 
20:05 11 Mar 2014
Tags: go

Cory LaNou
Gopher

http://denvergophers.github.io/
@corylanou

* Companies using Go

- Google / You Tube
- Canonical
- SendGrid
- Bitly
- Heroku
- Iron.io
- BBC World News
- Nokia Siemens Network
- Cloud Foundry
- CloudFlare
- Airbrake
- and so many more...

* so... why go?

* Because we have an awesome mascott!

.image /2014-03/intro_go_lightning/img/gopher.jpg

* But seriously...

- Go was created to make software engineering easier
- Software needs to scale beyond machine scale, but at human scale as well

* In the words of Andrew Gerrand

- software _should_ be simple
- software _can_ be simple

* What Andrew means by "simple"

- Small
- Readable
- Consistent
- Orthogonal
- Predictable
- Robust
- Useful by default

* Go at a glance

- Compiled
- Statically typed
- Clean syntax
- Simple type system
- Concurrency primitives
- Rich standard library
- Open source
- Great Tools
- Testing and Benchmarking


* The "go" command

- It's the primary tool for working with go projects
- It runs tests
- It runs benchmarks
- It formats your code
- and more...

  build       compile packages and dependencies
  clean       remove object files
  env         print Go environment information
  fix         run go tool fix on packages
  fmt         run gofmt on package sources
  get         download and install packages and dependencies
  install     compile and install packages and dependencies
  list        list packages
  run         compile and run Go program
  test        test packages
  tool        run specified go tool
  version     print Go version
  vet         run go tool vet on packages



* Hello, Go

.play ./intro_go_lightning/hello.go

* goroutines - first of two concurrency primitive

Go routines are light weight threads that are managed by the Go runtime. 
To run a function in a new go routine, just put "go" before the function call.

.play ./intro_go_lightning/routine.go

* channels - second concurrency primitive

Channels are typed conduits for synchronization and communication between go routines.

But we are not going to look at them today (there is no time)

* net/http (1/2)

The net/http package provides a HTTP client.

.play ./intro_go_lightning/net_1.go /START OMIT/,/END OMIT/ 

The client handles HTTP Keep-Alive using a pool of connections, by default. 
(This is configurable, of course.)

* net/http (2/2)

The net/http package also provides an HTTP server.

.play ./intro_go_lightning/net_2.go /START OMIT/,/END OMIT/ 

This is a high-performance, DoS-hardened, production-ready web server.
It serves dl.google.com

* What tip would you give someone new to go?

.image intro_go_lightning/img/matt_tweet.png

* donâ€™t try to compare it to java, c# or python 

.image intro_go_lightning/img/dave_tweet.png

* leave your object oriented brain at home. Embrace the interface.

.image intro_go_lightning/img/mike_tweet.png

* What is the most important thing to tell rubyists about Go

.image intro_go_lightning/img/cory_tweet.png

* Sometimes you have to write your code on more than one line, and that is not a bad thing...

.image intro_go_lightning/img/dave_tweet2.png

* Compile time type checks save time on error handling, testing, documentation, and debugging

.image intro_go_lightning/img/nate_tweet.png

* Go's compiler is so fast it compiles before the Ruby interpreter even spins up.  Don't fear it

.image intro_go_lightning/img/brian_tweet.png

* Getting Started

- Take the tour!

.link http://tour.golang.org tour.golang.org

- Read effective go

.link http://golang.org/doc/effective_go.html 

* How to get help

- Create a code example: 

.link http://play.golang.org play.golang.org

- Share the example:

.link https://plus.google.com/communities/114112804251407510571 g+ Go Community
.link https://groups.google.com/forum/#!forum/golang-nutsk  go-nuts mailing list

If all else fails, you can use twitter to reach out to me @corylanou.

* Want to learn more?

* Come to our monthly meetup

*When:* Fourth Thursday of every month, 6:30pm to 9:00 pm
*Where:* Galvanize (where you are now)

FREE BEER AND PIZZA!

*RSVP:* 

.link http://www.meetup.com/Denver-Go-Language-User-Group/  www.meetup.com/Denver-Go-Language-User-Group

* Come to class for free!

*When:* Saturday, April 12th from 9AM to 1PM
*Where:* Galvanize (where you are now)

*RSVP:* 

.link http://www.meetup.com/Denver-Go-Language-User-Group/  www.meetup.com/Denver-Go-Language-User-Group

_Note:_ Seating is limited


All of our talks are listed here: 

.link http://denvergophers.com denvergophers.com

And of course our github repo:

.link https://github.com/denvergophers github.com/denvergophers

* References

Many of the example slides in the presentation are based on or directly from:

.link https://speakerdeck.com/railsberry/go-a-simple-programming-environment-by-andrew-gerrand Andrew Gerrand's Railsberry Presentation





